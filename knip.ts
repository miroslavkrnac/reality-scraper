import type { KnipConfig } from 'knip';

const TESTS_IGNORE = ['**/{mocks,tests}/**/*', '**/*{test,e2e,spec}.{utils,consts,types}.ts', '**/*mock.ts'];

const IGNORE_BFF_CONFIG = [
	'packages/football-admin/football-admin-bff/schemas/**/*',
	'packages/data-history/data-history-bff/schemas/**/*',
];

const ENGINE_CONFIG_IGNORE = [
	'**/src/config/**/*', // all config files generated by engine
];

const TEMPORARY_UNUSED_DEPS_IGNORE = ['zod'];

const IGNORE_GRPC_GENERATED_FILES = ['packages/dc/dc-service-grpc/src/generated/**/*'];

// Knip cannot resolve the dynamic imports in the following files (lazy loaded components)
const DYNAMIC_IMPORTS = [
	'packages/football-admin/football-admin-client/**/Players/Detail/Detail.tsx',
	'packages/football-admin/football-admin-client/**/UnpairedPlayers/Detail/Detail.tsx',
	'packages/football-admin/football-admin-client/**/RouterProvider/RouterProvider.tsx',
];

const MFE_IGNORE = ['SPORT_MFE/*', 'FA_MFE/*'];

const config: KnipConfig = {
	entry: ['packages/**/{index,main,boot,App,bootstrap}.{ts,tsx}!', 'packages/**/boot/**/*!', 'packages/**/mfe/**/*!'],
	project: ['!**/*{test,spec,e2e}*', 'packages/**/src/**/*.{ts,tsx}!'],
	// ...PLUGINS,
	ignore: [
		...IGNORE_BFF_CONFIG,
		...TESTS_IGNORE,
		...ENGINE_CONFIG_IGNORE,
		...DYNAMIC_IMPORTS,
		...IGNORE_GRPC_GENERATED_FILES,
		'codegen/**/*',
		'**/*.config.{ts,js}',
		'**/{prisma,mfe}/**/*',
		'**/public-codes/tinymce/**/*',
		'packages/**/{@types,*-shared}/**/*',
		'**/*{vitest,vite,webpack,react-testing-library,typetest,generated,EngineObjectRegistry}*',
		// @NOTE: UI Kit components are not used in the project, but are imported in the project
		'packages/lib/ui-kit/src/components/**/*.tsx',
		// @TODO: Remove this once we have a proper form component
		'packages/lib/components/src/components/Form/**/*',
		// @NOTE: Config file to kysely-codegen
		'packages/dc/**/.kysely-codegenrc.ts',
		// @NOTE: Config file to dependency-cruiser
		'dependency-cruiser/config.js',
	],
	ignoreDependencies: ['react-router', 'dotenv', 'csstype', '@iwd/*', ...MFE_IGNORE, ...TEMPORARY_UNUSED_DEPS_IGNORE],
	workspaces: {
		'packages/tools/scripts': {
			entry: ['**/*.ts!'],
		},
		'packages/tools/git-cli': {
			entry: ['**/*/{main,nonInteractiveRelease}.ts!'],
		},
		'packages/**/*-client': {
			entry: ['**/src/{App,bootstrap,index}.{tsx,ts}!', '**/mfe/**/*!'],
			project: [...TESTS_IGNORE, 'src/**/*.{ts,tsx}!'],
			ignore: ['src/_generated/**/*'],
			ignoreDependencies: ['sass', 'sass-loader', 'zustand'],
		},
	},
	webpack: {
		config: ['webpack/webpack.shared.ts!'],
		project: ['packages/**/webpack.prod.ts!'],
	},
	ignoreExportsUsedInFile: true,
	includeEntryExports: true,
	ignoreWorkspaces: ['packages/lib/utils', 'packages/lib/react-utils'],
	rules: {
		enumMembers: 'off',
	},
};

export default config;
